// <auto-generated />
using System;
using CouchScore.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CouchScore.Migrations
{
    [DbContext(typeof(ScorecardContext))]
    [Migration("20200302012825_Initial2")]
    partial class Initial2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CouchScore.Models.Scorecard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Scorecard");
                });

            modelBuilder.Entity("CouchScore.Models.ScorecardMatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ScorecardId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScorecardId");

                    b.ToTable("ScorecardMatch");
                });

            modelBuilder.Entity("CouchScore.Models.ScorecardMatchOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ScorecardMatchId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScorecardMatchId");

                    b.ToTable("ScorecardMatchOption");
                });

            modelBuilder.Entity("CouchScore.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ScorecardMatchId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScorecardMatchId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("CouchScore.Models.ScorecardMatch", b =>
                {
                    b.HasOne("CouchScore.Models.Scorecard", null)
                        .WithMany("ScorecardMatches")
                        .HasForeignKey("ScorecardId");
                });

            modelBuilder.Entity("CouchScore.Models.ScorecardMatchOption", b =>
                {
                    b.HasOne("CouchScore.Models.ScorecardMatch", null)
                        .WithMany("ScorecardMatchOptions")
                        .HasForeignKey("ScorecardMatchId");
                });

            modelBuilder.Entity("CouchScore.Models.User", b =>
                {
                    b.HasOne("CouchScore.Models.ScorecardMatch", null)
                        .WithMany("Users")
                        .HasForeignKey("ScorecardMatchId");
                });
#pragma warning restore 612, 618
        }
    }
}
